{
	"name": "DF",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DimCustomerCsv",
						"type": "DatasetReference"
					},
					"name": "DimCustomerStream"
				},
				{
					"dataset": {
						"referenceName": "DimCustomer_TGT",
						"type": "DatasetReference"
					},
					"name": "DimCustomerLatest"
				},
				{
					"dataset": {
						"referenceName": "DimCustomer_TGT",
						"type": "DatasetReference"
					},
					"name": "getMaxCustomerSK"
				}
			],
			"sinks": [
				{
					"name": "maxCustomerSKSink"
				},
				{
					"dataset": {
						"referenceName": "DimCustomer_TGT",
						"type": "DatasetReference"
					},
					"name": "DimCustomerTGT"
				}
			],
			"transformations": [
				{
					"name": "DriftedCustomerID"
				},
				{
					"name": "RemoveExistData"
				},
				{
					"name": "CreatesurrogateKey"
				},
				{
					"name": "updateCustomerSK"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false) ~> DimCustomerStream",
				"source(output(",
				"          CustomerSK as integer,",
				"          CustomerID as integer,",
				"          CompanyName as string,",
				"          SalesPerson as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: true) ~> DimCustomerLatest",
				"source(output(",
				"          maxCustomerSK as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'Select Max(CustomerSK) as maxCustomerSK From DimCustomer',",
				"     format: 'query',",
				"     staged: true) ~> getMaxCustomerSK",
				"DimCustomerStream derive(CustomerID = toInteger(byName('CustomerID'))) ~> DriftedCustomerID",
				"DriftedCustomerID, DimCustomerLatest exists(DriftedCustomerID@CustomerID == DimCustomerLatest@CustomerID,",
				"     negate:true,",
				"     broadcast: 'auto')~> RemoveExistData",
				"RemoveExistData keyGenerate(output(CustomerSK as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> CreatesurrogateKey",
				"CreatesurrogateKey derive(CustomerSK = toInteger(CustomerSK) + toInteger(iif(isNull(maxCustomerSKSink#outputs()[1].CustomerSK),0,maxCustomerSKSink#outputs()[1].CustomerSK))) ~> updateCustomerSK",
				"getMaxCustomerSK sink(validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1,",
				"     mapColumn(",
				"          CustomerSK = maxCustomerSK",
				"     )) ~> maxCustomerSKSink",
				"updateCustomerSK sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CustomerSK as integer,",
				"          CustomerID as integer,",
				"          CompanyName as string,",
				"          SalesPerson as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> DimCustomerTGT"
			]
		}
	}
}